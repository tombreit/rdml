# SPDX-FileCopyrightText: Thomas Breitner
#
# SPDX-License-Identifier: EUPL-1.2

"""
Django settings for rdml project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/

See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/
"""

from pathlib import Path
import environ
from django.utils.log import DEFAULT_LOGGING as LOGGING


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
environ.Env.read_env(BASE_DIR.parent / ".env")

BUILD_DIR = BASE_DIR.parent / "build"
DATA_DIR = BASE_DIR.parent / "data"

# Make sure directory structure exists
BUILD_DIR.mkdir(parents=True, exist_ok=True)
DATA_DIR.mkdir(parents=True, exist_ok=True)

DEBUG = env("DEBUG")
SECRET_KEY = env("SECRET_KEY", default="django-insecure-asdfasdfasdf")
ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=[])
CSRF_TRUSTED_ORIGINS = env.list("CSRF_TRUSTED_ORIGINS", default=[])

CSRF_COOKIE_SECURE = False if DEBUG else True
SESSION_COOKIE_SECURE = False if DEBUG else True

AUTH_USER_MODEL = "accounts.CustomUser"
LOGOUT_REDIRECT_URL = "/"

# Application definition
DJANGO_APPS = [
    # 'django.contrib.admin',
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "whitenoise.runserver_nostatic",  # Must be before 'django.contrib.staticfiles'
    "django.contrib.staticfiles",
    "django.contrib.sites",
]
THIRD_PARTY_APPS = [
    "crispy_forms",
    "crispy_bootstrap5",
    "django_htmx",
    "auditlog",
]
LOCAL_APPS = [
    "rdml.apps.RDAdminConfig",  # replaces 'django.contrib.admin'
    "rdml.core",
    "rdml.accounts",
    "rdml.organization",
    "rdml.classification",
    "rdml.research",
    "rdml.doimanager",
    "rdml.doiresolver",
    "rdml.dashboard",
]


INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "rdml.core.middleware.ip_allowed_middleware",
    "rdml.core.middleware.admin_ip_restriction_middleware",
    "rdml.core.middleware.more_whitenoise_middleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_htmx.middleware.HtmxMiddleware",
    "auditlog.middleware.AuditlogMiddleware",
]

ROOT_URLCONF = "rdml.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "rdml.organization.context_processors.branding",
                "rdml.doimanager.context_processors.doimanager",
            ],
        },
    },
]

WSGI_APPLICATION = "rdml.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": DATA_DIR / "db.sqlite3",
    }
}

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en"

TIME_ZONE = "Europe/Berlin"

USE_I18N = True

USE_TZ = True

# Start on Monday
# This value is only used when not using format internationalization, or when a format cannot be found for the current locale.
FIRST_DAY_OF_WEEK = 1

FORMAT_MODULE_PATH = [
    "rdml.core.formats",
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# http://whitenoise.evans.io/en/latest/django.html#add-compression-and-caching-support
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATIC_URL = "static/"
STATIC_ROOT = BUILD_DIR / "staticfiles"

MEDIA_URL = "media/"
MEDIA_ROOT = DATA_DIR / "media"

# Email settings
# https://docs.djangoproject.com/en/4.2/ref/settings/#email
EMAIL_BACKEND = env.str("EMAIL_BACKEND")
EMAIL_HOST = env("EMAIL_HOST")
EMAIL_PORT = env("EMAIL_PORT")
EMAIL_SUBJECT_PREFIX = env("EMAIL_SUBJECT_PREFIX")
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL")
SERVER_EMAIL = DEFAULT_FROM_EMAIL

ADMINS = [x.split(":") for x in env.list("ADMINS")]
MANAGERS = ADMINS

# https://docs.djangoproject.com/en/5.1/ref/contrib/sites/#enabling-the-sites-framework
SITE_ID = 1

# Logging
# https://docs.djangoproject.com/en/4.1/howto/logging/
LOGGING["handlers"]["mail_admins"]["include_html"] = True

# Message Framework
MESSAGE_STORAGE = "rdml.core.messages.DedupSessionStorage"

#######################################################################
### Third party extensions
#######################################################################

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# WhiteNoise
WHITENOISE_INDEX_FILE = True

#######################################################################
### RDML settings
#######################################################################

# Add extra output directories that WhiteNoise can serve as static files
# *outside* of `staticfiles`.
RDML_MORE_WHITENOISE = [
    {"directory": BUILD_DIR / "docs" / "html", "prefix": "docs/"},
]

RDML_BASE_URL = env("RDML_BASE_URL", default="http://127.0.0.1:8000")

RDML_EDIT_ALLOWED_IP_RANGES = env.list("RDML_EDIT_ALLOWED_IP_RANGES", default=["*"])

# If .env has `RDML_EDIT_ALLOWED_IP_RANGES=` (no value given),
# it does not output the given default value.
_raw = env.list("RDML_EDIT_ALLOWED_IP_RANGES", default=None)
# if _raw is None (unset) or empty list (blank), fall back to ["*"]
RDML_EDIT_ALLOWED_IP_RANGES = _raw or ["*"]


### DEBUG SETTINGS

if DEBUG:
    DEV_APPS = [
        "debug_toolbar",
    ]
    INSTALLED_APPS += DEV_APPS

    MIDDLEWARE.insert(2, "debug_toolbar.middleware.DebugToolbarMiddleware")

    INTERNAL_IPS = [
        # ...
        "127.0.0.1",
        # ...
    ]
